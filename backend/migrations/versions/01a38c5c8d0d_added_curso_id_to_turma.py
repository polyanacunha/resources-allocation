"""Added curso_id to Turma

Revision ID: 01a38c5c8d0d
Revises: 
Create Date: 2024-06-24 16:54:30.228198

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '01a38c5c8d0d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('turma_disciplina')
    op.drop_table('disciplina')
    op.drop_table('professor_disponibilidade')
    op.drop_table('curso_disciplina')
    op.drop_table('turma')
    op.drop_table('professor')
    op.drop_table('disciplina_professor')
    op.drop_table('curso')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('curso',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('curso_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='curso_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('disciplina_professor',
    sa.Column('disciplina_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('professor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['disciplina_id'], ['disciplina.id'], name='disciplina_professor_disciplina_id_fkey'),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.id'], name='disciplina_professor_professor_id_fkey'),
    sa.PrimaryKeyConstraint('disciplina_id', 'professor_id', name='disciplina_professor_pkey')
    )
    op.create_table('professor',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('professor_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='professor_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('turma',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('turma_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('semestre', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('periodo', postgresql.ENUM('manhã', 'noite', name='periodo_enum'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='turma_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('curso_disciplina',
    sa.Column('curso_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('disciplina_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('semestre', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['curso_id'], ['curso.id'], name='curso_disciplina_curso_id_fkey'),
    sa.ForeignKeyConstraint(['disciplina_id'], ['disciplina.id'], name='curso_disciplina_disciplina_id_fkey'),
    sa.PrimaryKeyConstraint('curso_id', 'disciplina_id', 'semestre', name='curso_disciplina_pkey')
    )
    op.create_table('professor_disponibilidade',
    sa.Column('professor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('dia', postgresql.ENUM('segunda', 'terça', 'quarta', 'quinta', 'sexta', name='dia_enum'), autoincrement=False, nullable=False),
    sa.Column('periodo', postgresql.ENUM('manhã', 'noite', name='periodo_enum'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.id'], name='professor_disponibilidade_professor_id_fkey'),
    sa.PrimaryKeyConstraint('professor_id', 'dia', 'periodo', name='professor_disponibilidade_pkey')
    )
    op.create_table('disciplina',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('disciplina_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('carga_horaria_semanal', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='disciplina_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('turma_disciplina',
    sa.Column('turma_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('disciplina_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('professor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('dia', postgresql.ENUM('segunda', 'terça', 'quarta', 'quinta', 'sexta', name='dia_enum'), autoincrement=False, nullable=True),
    sa.Column('periodo', postgresql.ENUM('manhã', 'noite', name='periodo_enum'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['disciplina_id'], ['disciplina.id'], name='turma_disciplina_disciplina_id_fkey'),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.id'], name='turma_disciplina_professor_id_fkey'),
    sa.ForeignKeyConstraint(['turma_id'], ['turma.id'], name='turma_disciplina_turma_id_fkey'),
    sa.PrimaryKeyConstraint('turma_id', 'disciplina_id', 'professor_id', name='turma_disciplina_pkey')
    )
    # ### end Alembic commands ###
